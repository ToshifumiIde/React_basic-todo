[{"/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/App.jsx":"1","/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/InputTodo.jsx":"2","/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/IncompleteTodos.jsx":"3","/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/CompleteTodos.jsx":"4"},{"size":2862,"mtime":1609145785951,"results":"5","hashOfConfig":"6"},{"size":609,"mtime":1609145118268,"results":"7","hashOfConfig":"6"},{"size":1126,"mtime":1609143709680,"results":"8","hashOfConfig":"6"},{"size":911,"mtime":1609143681951,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"4j9gim",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/App.jsx",["19"],"import React , {useState} from 'react'\nimport style from \"./style.css\";\nimport {InputTodo} from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport {CompleteTodos} from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [ todoText , setTodoText ] = useState(\"\");\n  const [ incompleteTodos, setIncompleteTodos ] = useState([]);\n  const [ completeTodos,setCompleteTodos ] = useState([]);\n\n  const onClickAdd = (event)=> {\n    event.preventDefault();\n    if(todoText === \"\") return;\n    const newTodos = [...incompleteTodos,todoText];\n    //incompleteTodosに入力されている内容を分割代入で展開し、最後尾に新たに入力したtodoTextを追加し、新しい配列を作成する\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n\n  const onClickDelete =(index)=>{\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index,1);//配列のindex番目から、1つ値を削除する\n    setIncompleteTodos(newTodos);//useStateの更新で新しい配列を格納する\n  };\n  const onClickComplete = (index)=> {\n    const newIncompleteTodos = [...incompleteTodos];\n    //現在の未完了todoの配列を展開して格納\n    newIncompleteTodos.splice(index, 1);\n    //未完了のtodoのうち、index番目から1つspliceする\n    setIncompleteTodos(newIncompleteTodos);\n    //未完了todosにはsplice後のtodosを再配列\n    const newCompleteTodos = [...completeTodos , incompleteTodos[index]];\n    //完了todosには、既存の完了todosを展開して格納し、最後尾にindex番目の未完了todoを追加する\n    setCompleteTodos(newCompleteTodos);\n    //set関数にnewCompleteTodosの配列を格納する\n  }\n\n  const onClickBack = (index) =>{\n    const newCompleteTodos = [...completeTodos];\n    //現在の完了todosを新しい配列として用意する\n    newCompleteTodos.splice(index , 1);\n    //完了todosからindex番目の配列を第二引数分だけ削除する\n    const newIncompleteTodos = [...incompleteTodos , completeTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  }\n\n  const onChangeTodoText = (event)=> {\n    setTodoText(event.target.value)\n  };\n\n  return (\n    <>\n      <InputTodo \n        onClick={onClickAdd}\n        onChange={onChangeTodoText}\n        todoText={todoText}\n        disabled={incompleteTodos.length >= 5}\n      />\n      {incompleteTodos.length >= 5 && (\n        <p style={{color:\"red\",textAlign:\"center\",}}>登録できるTODOは5個までです。消化してください</p>\n      )}\n      <IncompleteTodos \n        todos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos\n        onClickBack={onClickBack}\n        todos={completeTodos}\n      />\n    </>\n  )\n};","/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/InputTodo.jsx",[],"/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/IncompleteTodos.jsx",[],"/Users/idetoshifumi/Desktop/React-todo/basic-todo/src/components/CompleteTodos.jsx",[],{"ruleId":"20","severity":1,"message":"21","line":2,"column":8,"nodeType":"22","messageId":"23","endLine":2,"endColumn":13},"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar"]